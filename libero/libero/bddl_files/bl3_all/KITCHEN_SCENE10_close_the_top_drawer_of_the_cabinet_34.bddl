(define (problem libero_kitchen_tabletop_manipulation)
      (:domain robosuite)
      (:language close the top drawer of the cabinet)
    
      (:regions
        (wooden_cabinet_init_region
      (:target kitchen_table)
      (:ranges (
        (-1e-10 -0.3 0.0 -0.29999999999)
      ))
      (:yaw_rotation (
        (3.141592653589793 3.141592653589793)
      ))
    )
    (akita_black_bowl_init_region
      (:target kitchen_table)
      (:ranges (
        (-0.125 -0.025 -0.07500000000000001 0.025)
      ))
    )
    (butter_back_init_region
      (:target kitchen_table)
      (:ranges (
        (-0.125 0.17500000000000002 -0.07500000000000001 0.225)
      ))
    )
    (butter_front_init_region
      (:target kitchen_table)
      (:ranges (
        (-0.025 0.17500000000000002 0.025 0.225)
      ))
    )
    (chocolate_pudding_init_region
      (:target kitchen_table)
      (:ranges (
        (-0.025 0.025 0.025 0.07500000000000001)
      ))
    )
    (top_side
      (:target wooden_cabinet_1)
    )
    (top_region
      (:target wooden_cabinet_1)
    )
    (middle_region
      (:target wooden_cabinet_1)
    )
    (bottom_region
      (:target wooden_cabinet_1)
    )
  )
    
      (:fixtures
        kitchen_table - kitchen_table
    wooden_cabinet_1 - wooden_cabinet
      )
    
      (:objects
        akita_black_bowl_1 - akita_black_bowl
    butter_1 butter_2 - butter
    chocolate_pudding_1 - chocolate_pudding
    onion_1 - onion
      )
    
      (:obj_of_interest
            wooden_cabinet_1
      )
    
      (:init
        (on akita_black_bowl_1 kitchen_table_akita_black_bowl_init_region)
    (on butter_1 kitchen_table_butter_front_init_region)
    (on butter_2 kitchen_table_butter_back_init_region)
    (on chocolate_pudding_1 kitchen_table_chocolate_pudding_init_region)
    (on wooden_cabinet_1 kitchen_table_wooden_cabinet_init_region)
    (open wooden_cabinet_1_top_region)
    (on onion_1 wooden_cabinet_1_top_side)
      )
    
      (:goal
        (And
          (close wooden_cabinet_1_top_region)
        )
      )
    
)